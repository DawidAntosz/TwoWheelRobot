This directory is intended for project specific (private) libraries.
PlatformIO will compile them to static libraries and link into executable file.

The source code of each library should be placed in an own separate directory
("lib/your_library_name/[here are source files]").

For example, see a structure of the following two libraries `Foo` and `Bar`:

|--lib
| |
| |--Bar
| | |--docs
| | |--examples
| | |--src
| | |- Bar.c
| | |- Bar.h
| | |- library.json (optional, custom build options, etc) https://docs.platformio.org/page/librarymanager/config.html
| |
| |--Foo
| | |- Foo.c
| | |- Foo.h
| |
| |- README --> THIS FILE
|
|- platformio.ini
|--src
|- main.c

and a contents of `src/main.c`:

```
#include <Foo.h>
#include <Bar.h>

int main (void)
{
  ...
}

```

PlatformIO Library Dependency Finder will find automatically dependent
libraries scanning project source files.

More information about PlatformIO Library Dependency Finder

- https://docs.platformio.org/page/librarymanager/ldf.html









#include <Arduino.h>
#include "cytron_md10a.hpp"
#include "encoder.hpp"

Encoder leftEncoder(PINA_1, PINB_1);
// Encoder rightEncoder(PINA_2, PINB_2);

void setup(void)
{
Serial.begin(115200);
Serial.println("Program started!");

// CytronMD10A motorController;
// motorController.setSpeeds(50, -50);
// delay(3000);
// motorController.setSpeeds(0, 0);
// delay(1000);

leftEncoder.init();
// rightEncoder.init();
}

void loop(void)
{
// Serial.println("Running...");
// delay(1000);

float leftAngularVelocity = leftEncoder.getAngularVelocity();
// float rightAngularVelocity = rightEncoder.getAngularVelocity();

Serial.print("Lewy enkoder [rad/s]: ");
Serial.println(leftAngularVelocity);

// Serial.print("Prawy enkoder [rad/s]: ");
// Serial.println(rightAngularVelocity);

delay(100);
}
